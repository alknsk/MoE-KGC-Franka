2025-07-03 09:17:35 - moe_kgc - INFO - Logging to experiments/moe_kgc_batch_experiment_eval/logs/moe_kgc_20250703_091735.log
2025-07-03 09:17:35 - moe_kgc - INFO - 开始实验: moe_kgc_batch_experiment_eval
2025-07-03 09:17:35 - moe_kgc - INFO - 使用设备: cuda
2025-07-03 09:17:35 - moe_kgc - INFO - 加载数据...
2025-07-03 09:17:35 - moe_kgc - INFO - 加载预处理的PyG数据...
/home2/yanghaochen/MoE_franka/scripts/train_e2e.py:109: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  train_data = torch.load(train_pyg_path)
/home2/yanghaochen/MoE_franka/scripts/train_e2e.py:110: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  val_data = torch.load(val_pyg_path) if val_pyg_path.exists() else None
/home2/yanghaochen/MoE_franka/scripts/train_e2e.py:111: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  test_data = torch.load(test_pyg_path) if test_pyg_path.exists() else None
2025-07-03 09:17:35 - moe_kgc - INFO - 创建mini-batch数据加载器...
/home2/yanghaochen/anaconda3/envs/franka/lib/python3.12/site-packages/torch_geometric/sampler/neighbor_sampler.py:50: UserWarning: Using '{self.__class__.__name__}' without a 'pyg-lib' installation is deprecated and will be removed soon. Please install 'pyg-lib' for accelerated neighborhood sampling
  warnings.warn("Using '{self.__class__.__name__}' without a "
2025-07-03 09:17:35 - moe_kgc - INFO - 数据加载完成:
2025-07-03 09:17:35 - moe_kgc - INFO -   训练批次数: 3914
2025-07-03 09:17:35 - moe_kgc - INFO -   验证批次数: 267
2025-07-03 09:17:35 - moe_kgc - INFO -   测试批次数: 255
2025-07-03 09:17:35 - moe_kgc - INFO - 初始化模型...
/home2/yanghaochen/anaconda3/envs/franka/lib/python3.12/site-packages/torch/nn/modules/transformer.py:379: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(
2025-07-03 09:17:40 - moe_kgc - INFO - 模型参数量: 245,153,326
2025-07-03 09:17:40 - moe_kgc - INFO - 加载检查点: experiments/moe_kgc_batch_experiment/checkpoints/best_model.pt
/home2/yanghaochen/MoE_franka/scripts/train_e2e.py:217: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(args.checkpoint, map_location=device)
Traceback (most recent call last):
  File "/home2/yanghaochen/MoE_franka/scripts/train_e2e.py", line 321, in <module>
    main()
  File "/home2/yanghaochen/MoE_franka/scripts/train_e2e.py", line 217, in main
    checkpoint = torch.load(args.checkpoint, map_location=device)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/yanghaochen/anaconda3/envs/franka/lib/python3.12/site-packages/torch/serialization.py", line 1319, in load
    with _open_file_like(f, "rb") as opened_file:
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/yanghaochen/anaconda3/envs/franka/lib/python3.12/site-packages/torch/serialization.py", line 659, in _open_file_like
    return _open_file(name_or_buffer, mode)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/yanghaochen/anaconda3/envs/franka/lib/python3.12/site-packages/torch/serialization.py", line 640, in __init__
    super().__init__(open(name, mode))
                     ^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'experiments/moe_kgc_batch_experiment/checkpoints/best_model.pt'
